<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>